<?php

/*
 * This file is part of the SDK package.
 *
 * (c) {{ velocity.sdk.company_name }} <{{ velocity.sdk.company_email }}>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace {{ velocity.sdk.namespace }}\DependencyInjection;

use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\Loader;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\HttpKernel\DependencyInjection\Extension;
use Symfony\Component\DependencyInjection\Extension\PrependExtensionInterface;

/**
 * @author {{ velocity.sdk.company_author_name }} <{{ velocity.sdk.company_author_email }}>
 */
class {{ velocity.sdk.bundle_prefix }}Extension extends Extension implements PrependExtensionInterface
{
    /**
     * @param array            $configs
     * @param ContainerBuilder $container
     */
    public function load(array $configs, ContainerBuilder $container)
    {
        $configuration = new Configuration();
        $this->processConfiguration($configuration, $configs);

        $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services/common.yml');
        $loader->load('services/sdk.yml');
        {% if extension_load is defined %}{{ extension_load|raw }}{% endif %}

    }
    /**
     * Allow an extension to prepend the extension configurations.
     *
     * @param ContainerBuilder $container
     */
    public function prepend(ContainerBuilder $container)
    {
        {% if extension_prepend is defined %}{{ extension_prepend|raw }}{% endif %}

    }
}
